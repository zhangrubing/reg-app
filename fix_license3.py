from pathlib import Path
path = Path("backend/routers/licenses.py")
text = path.read_text(encoding="utf-8")
needle = "    items = [_row_to_license(row) for row in rows]\n    headers = [\"ID\", \"SN\", \"Activation ID\", \"Product\", \"Status\", \"Issued At\", \"Expires At\", \"Revoked At\"]\n    lines = [\",\".join(headers)]\n    for item in items:\n        lines.append(\n            \",\".join(\n                [\n                    str(item.get(\"id\", \"\")),\n                    item.get(\"sn\", \"\") or \"\",\n                    str(item.get(\"activation_id\") or \"\"),\n                    item.get(\"product_name\") or \"\",\n                    item.get(\"status\", \"\"),\n                    item.get(\"issued_at\") or \"\",\n                    item.get(\"expires_at\") or \"\",\n                    item.get(\"revoked_at\") or \"\",\n                ]\n            )\n        )\n\n    csv_content = \"\n\".join(lines)\n    csv_bytes = csv_content.encode(\"utf-8-sig\")\n    filename = f\"licenses-{datetime.utcnow().strftime('%Y%m%d%H%M%S')}\"
'
replacement = "    items = [_row_to_license(row) for row in rows]\n    headers = [\"ID\", \"SN\", \"Activation ID\", \"Product\", \"Status\", \"Issued At\", \"Expires At\", \"Revoked At\"]\n    lines = [\",\".join(headers)]\n    for item in items:\n        lines.append(\n            \",\".join(\n                [\n                    str(item.get(\"id\", \"\")),\n                    item.get(\"sn\", \"\") or \"\",\n                    str(item.get(\"activation_id\") or \"\"),\n                    item.get(\"product_name\") or \"\",\n                    item.get(\"status\", \"\"),\n                    item.get(\"issued_at\") or \"\",\n                    item.get(\"expires_at\") or \"\",\n                    item.get(\"revoked_at\") or \"\",\n                ]\n            )\n        )\n\n    csv_content = \"\\n\".join(lines)\n    csv_bytes = csv_content.encode(\"utf-8-sig\")\n    filename = f\"licenses-{datetime.utcnow().strftime('%Y%m%d%H%M%S')}\"
text = text.replace(needle, replacement)
path.write_text(text, encoding="utf-8")
